release-artifacts

# Rust/Cargo
/target/
**/*.rs.bk
*.pdb
Cargo.lock

# Generated by Cargo
# Will have compiled files and executables
debug/
target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb

# Generated documentation
/doc/
/target/doc/

# Benchmark results
/benches/results/
criterion/

# Coverage reports
/coverage/
tarpaulin-report.html
lcov.info
cobertura.xml

# IDE and Editor files
.vscode/
.idea/
*.swp
*.swo
*~
.#*
\#*\#
.DS_Store
Thumbs.db

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Temporary files
*.tmp
*.temp
*.log

# Environment variables
.env
.env.local
.env.*.local

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Build artifacts
*.o
*.a
*.so
*.dylib
*.dll
*.exe

# Test artifacts
/tests/tmp/
/test-results/

# Performance profiling
flamegraph.svg
perf.data*
*.prof

# Memory profiling
massif.out.*
cachegrind.out.*
callgrind.out.*

# Valgrind
vgcore.*

# Fuzzing
/fuzz/artifacts/
/fuzz/corpus/

# Release builds
/release/

# Local configuration
local.toml
.cargo/config.toml

# Generated C bindings (if FFI is added)
bindings.h
*.so.*
*.dylib.*

# Documentation build artifacts
mdbook-out/

# Package artifacts
*.crate

# Jupyter notebooks (if any)
.ipynb_checkpoints/

# Python artifacts (if any integration scripts)
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg

# Node.js artifacts (if any web interface)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# CLion
cmake-build-*/

# IntelliJ
out/

# mpeltonen/sbt-idea plugin
.idea_modules/

# JIRA plugin
atlassian-ide-plugin.xml

# Cursive Files
.cursive

# Backup files
*.bak
*.backup
*.old
*.orig

# Patch files
*.patch
*.diff

# Archive files
*.tar
*.tar.gz
*.tar.bz2
*.tar.xz
*.tgz
*.zip
*.rar
*.7z

# Lock files for other package managers
package-lock.json
yarn.lock
pnpm-lock.yaml

# Generated Rust documentation
rustdoc/

# Ignore flame graphs and performance data
flame.svg
perf.data

# Ignore any local scripts or notes
notes.txt
todo.txt
scratch.md
*.local

# Ignore benchmark comparison files
before.txt
after.txt
comparison.txt

# Ignore any data files used for testing
data/
samples/
testdata/

# Ignore configuration override files
config.override.toml
settings.override.json

# macOS specific
.AppleDouble
.LSOverride
Icon

# Windows specific
Desktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux specific
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# JetBrains IDEs
.idea/
*.iws
*.iml
*.ipr

# VS Code
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json

# Sublime Text
*.tmlanguage.cache
*.tmPreferences.cache
*.stTheme.cache
*.sublime-workspace
*.sublime-project

# Vim
[._]*.s[a-v][a-z]
[._]*.sw[a-p]
[._]s[a-rt-v][a-z]
[._]ss[a-gi-z]
[._]sw[a-p]
Session.vim
Sessionx.vim
.netrwhist
*~
tags
[._]*.un~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# Project specific ignores
# Add any project-specific files that should be ignored
*.secret
*.private
.local/

tmp
