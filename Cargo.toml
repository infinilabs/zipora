[package]
name = "zipora"
version = "1.1.2"
edition = "2024"
rust-version = "1.88"
authors = ["InfiniLabs"]
description = "High-performance Rust implementation providing advanced data structures and compression algorithms with memory safety guarantees. Features LRU page cache, sophisticated caching layer, fiber-based concurrency, real-time compression, secure memory pools, SIMD optimizations, and complete C FFI for migration from C++."
license-file = "LICENSE"
repository = "https://github.com/infinilabs/zipora"
keywords = ["compression", "data-structures", "trie", "succinct", "concurrency"]
categories = ["compression", "data-structures", "algorithms", "concurrency", "memory-management"]

[lib]
name = "zipora"
crate-type = ["rlib", "cdylib"]

[features]
default = ["simd", "mmap", "zstd", "serde"]
simd = []
# AVX-512 support requires nightly Rust due to experimental intrinsics
# Currently disabled by default for stable Rust compatibility
avx512 = ["simd"]
# Nightly features for performance optimizations
nightly = []
mmap = ["dep:memmap2"]
zstd = ["dep:zstd"]
lz4 = ["dep:lz4_flex"]
ffi = ["dep:cbindgen"]
serde = ["dep:serde", "dep:bincode"]

[dependencies]
# Core functionality
memmap2 = { version = "0.9.4", optional = true }
bytemuck = "1.18"
thiserror = "1.0.40"
log = "0.4.17"

# Performance
ahash = "0.8.8"
rayon = "1.10"
crossbeam-utils = "0.8.20"
dashmap = "6.0"
thread_local = "1.1"
fastrand = "2.1"
parking_lot = "0.12"

# Compression (optional)
zstd = { version = "0.13.2", optional = true }
lz4_flex = { version = "0.11", optional = true }

# Serialization (optional)
serde = { version = "1.0", features = ["derive"], optional = true }
bincode = { version = "1.3", optional = true }

# Additional dependencies for Phase 1
uuid = { version = "1.11", features = ["v4"] }

# Phase 4 dependencies
once_cell = "1.20"
libc = "0.2.159"

# Phase 5 dependencies (concurrency and real-time compression)
tokio = { version = "1.41", features = ["full"] }
async-trait = "0.1.50"
futures = "0.3.25"
num_cpus = "1.16"

# System utilities dependencies
raw-cpuid = "11.0"
base64 = "0.22"

# FFI support (optional)
cbindgen = { version = "0.27", optional = true }

[dev-dependencies]
criterion = { version = "0.5.1", features = ["html_reports"] }
proptest = "1.6"
tempfile = "3.14"
arbitrary = { version = "1.3", features = ["derive"] }
rand = "0.8"
# Note: crossbeam-utils and rayon are already in main dependencies

[build-dependencies]
cbindgen = { version = "0.27", optional = true }
pkg-config = "0.3.27"

[[bench]]
name = "benchmark"
harness = false

[[bench]]
name = "benchmark_rank_select"
harness = false

[[bench]]
name = "simd_rank_select_bench"
harness = false

[[bench]]
name = "dictionary_optimization_bench"
harness = false
[[bench]]
name = "cache_bench"
harness = false

[[bench]]
name = "avx512_bench"
harness = false

[[bench]]
name = "secure_memory_pool_bench"
harness = false

[[bench]]
name = "specialized_containers_bench"
harness = false

[[bench]]
name = "rank_select_bench"
harness = false

[[bench]]
name = "compressed_sparse_trie_bench"
harness = false

[[bench]]
name = "cache_locality_bench"
harness = false

[[bench]]
name = "simd_memory_bench"
harness = false

[[bench]]
name = "comprehensive_trie_benchmarks"
harness = false

[[bench]]
name = "hash_maps_bench"
harness = false

[[bench]]
name = "lru_map_bench"
harness = false

[[bench]]
name = "crit_bit_trie_bench"
harness = false

[[bench]]
name = "dict_zip_bench"
harness = false

[profile.release]
opt-level = 3           # Maximum optimization level
lto = "fat"            # Full link-time optimization (better than "thin")
codegen-units = 1      # Single codegen unit for best optimization
panic = "unwind"       # Changed to unwind for test compatibility
strip = false          # Keep debug symbols for tests
overflow-checks = false # Disable overflow checks in release for performance
debug-assertions = false # Disable debug assertions in release

[profile.bench]
opt-level = 3           # Maximum optimization for benchmarks
lto = "fat"            # Full LTO for best benchmark performance
codegen-units = 1      # Single codegen unit
panic = "abort"        # Match release profile
overflow-checks = false # Optimize for performance
debug = false          # Remove debug info for accurate benchmarks
debug-assertions = false # No debug assertions in benchmarks

[profile.test]
opt-level = 3           # Optimize for fast test execution
panic = "unwind"        # Required for test assertions and panic recovery
debug = true           # Enable debug info for test failures
debug-assertions = true # Enable debug assertions in tests
overflow-checks = true  # Enable overflow checks for safety in tests

[package.metadata.docs.rs]
features = ["simd", "mmap", "zstd", "lz4", "serde", "ffi"]
all-features = true

# Miri configuration for enhanced memory safety testing
[package.metadata.miri]
# Flags for comprehensive memory safety verification
flags = [
    "-Zmiri-strict-provenance",      # Strict pointer provenance checking
    "-Zmiri-symbolic-alignment-check", # Check alignment symbolically  
    "-Zmiri-check-number-validity",   # Check for invalid bit patterns
    "-Zmiri-disable-isolation",       # Allow file system access for tests
]
# Exclude tests that require specific hardware features not available in Miri
exclude = [
    "tests/simd_specific_tests.rs",
    "tests/avx512_tests.rs", 
    "benchmarks/*",
]

